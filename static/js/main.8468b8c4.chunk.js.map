{"version":3,"sources":["components/Quote.js","components/App.js","index.js"],"names":["Quote","props","Fragment","quote","author","App","drawBtnHandleClick","setState","previousQuote","state","currentQuote","previousQuoteAutor","currentQuoteAutor","fetch","then","response","json","data","random","Math","floor","length","prevBtnHandleClick","this","className","onClick","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kSAUeA,EAPD,SAACC,GAAD,OACZ,eAAC,IAAMC,SAAP,WACE,6BAAKD,EAAME,QACX,6BAAKF,EAAMG,aCiDAC,G,wDAlDb,WAAYJ,GAAQ,IAAD,8BACjB,cAAMA,IASRK,mBAAqB,WAGnB,EAAKC,SAAS,CACZC,cAAe,EAAKC,MAAMC,aAC1BC,mBAAoB,EAAKF,MAAMG,oBAGjCC,MAPY,yIAQTC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJ,IAAIC,EAASC,KAAKC,MAAMD,KAAKD,UAAYD,EAAKI,OAAS,IAAM,EAC7D,EAAKd,SAAS,CACZG,aAAcO,EAAKC,GAAQf,MAC3BS,kBAAmBK,EAAKC,GAAQd,aAxBrB,EA6BnBkB,mBAAqB,WACa,KAA7B,EAAKb,MAAMD,eACZ,EAAKD,SAAS,CACZG,aAAc,EAAKD,MAAMD,cACzBI,kBAAmB,EAAKH,MAAME,sBA/BlC,EAAKF,MAAQ,CACXC,aAAc,GACdE,kBAAmB,GACnBJ,cAAe,GACfG,mBAAoB,IANL,E,0CAsCnB,WACE,MAA0CY,KAAKd,MAAxCC,EAAP,EAAOA,aAAcE,EAArB,EAAqBA,kBACrB,OACE,sBAAKY,UAAU,YAAf,UACE,wBAAQC,QAASF,KAAKjB,mBAAtB,0BACA,wBAAQmB,QAASF,KAAKD,mBAAtB,4BACA,cAAC,EAAD,CAAOnB,MAAOO,EAAcN,OAAQQ,W,GA7C1Bc,IAAMC,YCCxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8468b8c4.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Quote.css'\r\n\r\nconst Quote = (props) => (\r\n  <React.Fragment>\r\n    <h2>{props.quote}</h2>\r\n    <h3>{props.author}</h3>\r\n  </React.Fragment>\r\n)\r\n\r\nexport default Quote","import React from 'react';\nimport Quote from './Quote';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      currentQuote: '',\n      currentQuoteAutor: '',\n      previousQuote: '',\n      previousQuoteAutor: '',\n    }\n  }\n\n  drawBtnHandleClick = () => {\n    const url = 'https://gist.githubusercontent.com/natebass/b0a548425a73bdf8ea5c618149fe1fce/raw/f4231cd5961f026264bb6bb3a6c41671b044f1f4/quotes.json';\n\n    this.setState({\n      previousQuote: this.state.currentQuote,\n      previousQuoteAutor: this.state.currentQuoteAutor\n    })\n\n    fetch(url)\n      .then(response => response.json())\n      .then(data => {\n        let random = Math.floor(Math.random() * (data.length - 0)) + 0;\n        this.setState({\n          currentQuote: data[random].quote,\n          currentQuoteAutor: data[random].author\n        })\n      })\n  }\n\n  prevBtnHandleClick = () => {\n    if(this.state.previousQuote !== '') {\n      this.setState({\n        currentQuote: this.state.previousQuote,\n        currentQuoteAutor: this.state.previousQuoteAutor\n      })\n    }\n  }\n\n  render() {\n    const {currentQuote, currentQuoteAutor} = this.state;\n    return(\n      <div className=\"container\">\n        <button onClick={this.drawBtnHandleClick}>Draw a quote</button>\n        <button onClick={this.prevBtnHandleClick}>Previous quote</button>\n        <Quote quote={currentQuote} author={currentQuoteAutor}></Quote>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}